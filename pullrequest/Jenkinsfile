@Library('k8s-jenkins-sharedLibraries') _
pipeline{
    agent {
        kubernetes{
            cloud 'kubernetes'
            namespace 'pe-devops'
            defaultContainer 'jnlp'
            yaml getPodTemplatePR()
        }
    }
    options {
        timeout(activity: true, time: 2, unit: 'HOURS')
        parallelsAlwaysFailFast()
        disableConcurrentBuilds()
    }
    parameters {
        string(name: 'BRANCH', defaultValue: 'master', description: 'Git project source branch', trim: true)
    }
    stages {
        stage('Get-Data') {
            steps {
                script {
                    container('jnlp') {
                        projectInfo = utils.getProjectInfo(URL_PROJECTS_YAML_RAW)
                        println projectInfo
                    }
                }
            }
        }
        stage('Fetch Code') {
            steps {
                script {
                    container('jnlp'){
                        utils.fetchCode(projectInfo.get('ssh_clone_url'), params.BRANCH)
                        appName = sh(label:"appName", script:"basename ${projectInfo.get('ssh_clone_url')} .git", returnStdout: true).trim()
                        baseName ="niels58/${appName}"
                        tagName = "pe-${params.BRANCH}-${BUILD_NUMBER}"
                        println """
                        APP_NAME :::: ${appName}
                        BASE_NAME :::: ${baseName}
                        TAG_NAME :::: ${tagName}
                        """
                    }
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    container('maven') {
                        utils.build(projectInfo.get('cmd_build'))
                    }
                }
            }
        }
        stage('Push') {
            steps {
                script {
                    container('kaniko') {
                        utils.pushKaniko(baseName, tagName)
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    container('jnlp') {
                        build(wait: true, job: 'Tools/k8s-deployment', parameters: [
                                    string(name: 'APP_NAME', value: appName ), 
                                    string(name: 'FINAL_TAG', value: "${baseName}:${tagName}" )
                                    ])
                    }
                }
            }
        }
    }
}
